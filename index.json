[{"content":"Introduction In this post, we use:\nHugo + Markdown for static blog site building. Github Pages for Deployment Cloudflare for a CDN acceleration (needs a domain) Please take a look at the TOC for steps of configuration.\nBuilding the Static Site with Hugo Hugo is a static website generator. In a nutshell, it parses your markdown file, add some themes/styles to it, and compiles to a pack of html/css/js files for deployment.\nGetting Started with Hugo You can follow this guide to set up hugo locally.\nMaybe Change your Config to YAML? (Optional) Hugo uses config.yoml or config.yaml for config file. IMO I think yaml is more readable than toml, so I\u0026rsquo;d like to convert the auto-generated toml file to config.yaml. You can also do that with some random online converter found on Google.\nBecause I use =yaml=, all the config examples in this posts is in yaml. If you want to use =toml=, don\u0026#39;t just copy paste, do the convertion yourself. Pick your Favorite Theme (Optional) Complete List | Hugo Themes\nModify the Config open config.yaml, there are some important fields to modify.\nbaseURL: \u0026#39;https://chocole.top/\u0026#39; # Change this buildDrafts: true title: \u0026#34;Random Notes\u0026#34; Params: env: production In config file, you also set up some theme specific settings, like TOC toggles. Go to your theme repo for detail.\nWe\u0026rsquo;ll go back to baseURL option later.\nTry Building the Site Locally Run hugo server in your root dir to test if everything goes well.\nDeploy Your Site to Github Pages How does Github Pages work? In a nutshell, it pulls your repo and hosts the files in it. So if you create a repo and push all the html/css/js files generated by hugo, then your github pages is set up.\nBut for convenience sake, we can invoke Github Action for automatic building \u0026amp; deploy. The blogging flow truns into:\nWrite posts in md and put them into contents/posts folder in your hugo dir. Commit and push them to master branch of the remote github repo. Pushing to master branch triggers the Github Action. a worker machine runs hugo to build md to html, then push the generated files to a new branch gh-pages. Github Pages can now host the site with the files in branch gh-pages. Create a Github Repo Create your blog repo and push everything except the public folder (if exists) in it. The public folder contains the generated html file and we actually don\u0026rsquo;t need them and they can be safely deleted.\nSet up Github Action In your repo root dir, create .github/workflows/gh-pages.yml, paste this:\nname: GitHub Pages on: push: branches: - master # Change this to your branch name (master/main) pull_request: jobs: deploy: runs-on: ubuntu-20.04 concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;0.101.0\u0026#39; # You can set your hugo version, check with `hugo version` extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == \u0026#39;refs/heads/master\u0026#39; }} # Change this to master/main with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public cname: chocole.top # If you dont want to use a custom domain, delete this line. There\u0026rsquo;re some important settings so make sure you read the comment.\nTest the Action Write some new random md files and push to your master branch, you can see if the github action succeeds in the repo page. If everything goes well, a new branch called gh-pages should appear, in which contains the generated html/css/js files.\nEnable Github Pages in Repo Settings. Enable Github Pages by setting the page branch to gh-pages. You should see your custom domain if you set the cname field in step Set up Github Action\nIf you choose not to use a custom domain, your site show now be accessible via that URL.\nUse Cloudflare to Accelerate your Site Create a new website in cf dashboard Create a new website in cf dashboard and select the free plan.\nConfigure the DNS server on your Domain Provider Side If your domain is not from cf, then you have to do this. Follow the instructions on the cf \u0026ldquo;Overview\u0026rdquo; page.\nAdd CNAME DNS records change the domain names to your domains. Always Use HTTPS cf Dashboard \u0026ndash; SSL/TLS \u0026ndash; Edge Certificates \u0026ndash; Always Use HTTPS\nConclusion For CF users you have to wait for DNS server updates and Edge Certificates Activation. In 24 hours you should have access to you new site.\nFAQ Q: The website is accessible, but the layout is broken.\nA: Check baseURL in Modify the Config\n","permalink":"https://chocole.top/posts/todo-build-a-website-with-hugo+github-pages+cloudflare/","summary":"Build a website with Hugo+Github Pages+Cloudflare","title":"Build a website with Hugo \u0026 Github Pages \u0026 Cloudflare"},{"content":"Hello World!\n你好，世界！\n","permalink":"https://chocole.top/posts/hello-world/","summary":"Hello World!!","title":"Hello World"}]
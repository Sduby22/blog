<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Random Notes</title><link>https://chocole.top/</link><description>Recent content on Random Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Jul 2022 04:42:00 +0800</lastBuildDate><atom:link href="https://chocole.top/index.xml" rel="self" type="application/rss+xml"/><item><title>Partition Methods of Quicksort</title><link>https://chocole.top/posts/partition-methods-of-quicksort/</link><pubDate>Mon, 11 Jul 2022 04:42:00 +0800</pubDate><guid>https://chocole.top/posts/partition-methods-of-quicksort/</guid><description>Generally speaking, Quicksort can use two types of partition methods. The first of which partitions the array into 3 parts: =(&amp;lt;=pivot), (pivot), (&amp;gt;pivot)=. And the latter partitions the array into 2 parts. I will introduce two coresponding algorithms: Hoare&amp;rsquo;s and Lomuto partition algorithm.</description></item><item><title>Build a website with Hugo &amp; Github Pages &amp; Cloudflare</title><link>https://chocole.top/posts/todo-build-a-website-with-hugo+github-pages+cloudflare/</link><pubDate>Wed, 06 Jul 2022 17:09:00 +0800</pubDate><guid>https://chocole.top/posts/todo-build-a-website-with-hugo+github-pages+cloudflare/</guid><description>Build a website with Hugo+Github Pages+Cloudflare</description></item><item><title>Build a Modern Tetris Game With Bevy and Rust</title><link>https://chocole.top/posts/tetris/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chocole.top/posts/tetris/</guid><description>Todo List Stage 1 A frame displaying our game 10x20 game board All 7 kinds of pieces: I, J, L, O, S, T, Z Spawn a piece Move the pieces left, right, and down Detect collisions Freeze the pieces and spawn new ones Stage 2</description></item><item><title>Hello World</title><link>https://chocole.top/posts/hello-world/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chocole.top/posts/hello-world/</guid><description>Hello World!!</description></item><item><title>Use Mold Linker in Rust</title><link>https://chocole.top/posts/use-mold-linker-in-rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chocole.top/posts/use-mold-linker-in-rust/</guid><description>Use Mold Linker in Rust Mold linker is a fast and memory-efficient linker. It is a drop-in replacement for GNU ld and lld. It is a good choice for Rust projects. (5x faster than GNU ld and 2x faster than lld)
Add the following to your Cargo config at YOUR_WORKSPACE/.cargo/config.toml:
[target.x86_64-unknown-linux-gnu] linker = &amp;#34;clang&amp;#34; rustflags = [&amp;#34;-C&amp;#34;, &amp;#34;link-arg=-fuse-ld=/usr/bin/mold&amp;#34;] mold does not yet support MacOS, but can use zld as an alternative: brew install michaeleisel/zld/zld</description></item></channel></rss>